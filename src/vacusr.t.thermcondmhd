!##############################################################################
! module vacusr - thermcondmhd

INCLUDE:vacusr.thermcondmhd.t
!INCLUDE:vacnul.specialsource.t

INCLUDE:vacnul.specialbound.t
INCLUDE:vacnul.specialini.t
INCLUDE:vacnul.specialio.t

!=============================================================================
! There are 3 subroutines in this file:
!
! specialsource -- for sources other than resistivity
! getdt_special -- for time step conditions other than CFL or resistivity
! specialeta    -- for non-constant resistivity with eqpar(eta_)<zero
!
!=============================================================================
subroutine specialsource(qdt,ixI^L,ixO^L,iws,qtC,wCT,qt,w)

include 'vacdef.f'

integer:: ixI^L,ixO^L,iws(niw_)
double precision:: qdt,qtC,qt,wCT(ixG^T,nw),w(ixG^T,nw)
!-----------------------------------------------------------------------------

if(eqpar(kappa_)>smalldouble)&
   call addsource_tcond(qdt,ixI^L,ixO^L,iws,qtC,wCT,qt,w)

return
end

!=============================================================================
subroutine getdt_special(w,ix^L)

! Limit "dt" further if necessary, e.g. due to the special source terms.
! The getdt_courant (CFL condition) and the getdt subroutine in the VACPHYS 
! module have already been called. 

include 'vacdef.f'

double precision:: w(ixG^T,nw)
integer:: ix^L
!-----------------------------------------------------------------------------

if(eqpar(kappa_)>smalldouble)&
   call getdt_tcond(w,ix^L)

return
end

!=============================================================================
subroutine specialeta(w,ix^L,idirmin)

include 'vacdef.f'

double precision:: w(ixG^T,nw)
integer:: ix^L,idirmin

call die('specialeta is not defined')
end
!=============================================================================

! end module vacusr - thermcond
!##############################################################################
